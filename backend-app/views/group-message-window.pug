extends user-dashboard 

block content
  link(rel='preconnect' href='https://fonts.googleapis.com')
  link(rel='preconnect' href='https://fonts.gstatic.com' crossorigin='')
  link(href='https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap' rel='stylesheet')
  link(rel='stylesheet' href='/stylesheets/message.css')
  
  .content
    section.container--group
      .container--group-title
        div.new-back-button &larr;
        h1.heading-primary #{group.name}
          span.space
          svg.icon(xmlns='http://www.w3.org/2000/svg' fill='none' viewbox='0 0 24 24' stroke-width='1.5' stroke='currentColor')
            path(stroke-linecap='round' stroke-linejoin='round' d='M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z')
      hr.line.line-position
      .container--group-messages
      
        -for(let i = 0;i<group.messages.length;i++) {
          if ((group.messages)[i].sender.equals(user._id))
            .msg.user(style="align-self: flex-end;")
              .msg-text.msg-text-if
                .msg-img.image-box
                  img.img-individual-if.image(src='/images/ico_twitter.png')
                  h5.if #{(allTransactions[i])[0].sender.name}
                .msg-text--description.heading-secondary
                  | #{(group.messages)[i].subject}
                  svg.icon(xmlns='http://www.w3.org/2000/svg' fill='none' viewbox='0 0 24 24' stroke-width='1.5' stroke='currentColor')
                    path(stroke-linecap='round' stroke-linejoin='round' d='M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z')
                if allTransactions
                  each transaction in allTransactions[i] 
                    .msg-text--individual.paid
                      .msg-text--individual-name #{transaction.reciever.name}
                      .msg-text--individual-money #{transaction.amount}
                      if (group.messages)[i].sender == transaction.reciever._id
                        button.msg-text--individual-btn.paid.btn #{transaction.status} 
                      else if transaction.status === "Pending"
                        if (transaction.reciever._id.equals(user._id))
                          button.msg-text--individual-btn.pay.btn  #{transaction.status}
                          form(method = "POST" action=`/users/${user.userid}/transactions/${transaction._id}/pay`) 
                              button.pay-button(type="submit") Pay
                        else 
                          button.msg-text--individual-btn.pay.btn #{transaction.status}
                      else 
                        button.msg-text--individual-btn.paid.btn #{transaction.status}
                    hr.line
          else 
            .msg.user
            
              .msg-text.msg-text-else
                .msg-img.image-box
                  img.img-individual-else.image(src='/images/ico_twitter.png')
                  h5.else #{(allTransactions[i])[0].sender.name}
                .msg-text--description.heading-secondary
                  | #{(group.messages)[i].subject}
                  svg.icon(xmlns='http://www.w3.org/2000/svg' fill='none' viewbox='0 0 24 24' stroke-width='1.5' stroke='currentColor')
                    path(stroke-linecap='round' stroke-linejoin='round' d='M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z')
                if allTransactions
                  each transaction in allTransactions[i] 
                    .msg-text--individual.paid
                      .msg-text--individual-name #{transaction.reciever.name}
                      .msg-text--individual-money #{transaction.amount}
                      if (group.messages)[i].sender == transaction.reciever._id
                        button.msg-text--individual-btn.paid.btn #{transaction.status} 
                      else if transaction.status === "Pending"
                        if (transaction.reciever._id.equals(user._id))
                          button.msg-text--individual-btn.pay.btn  #{transaction.status}
                          form(method = "POST" action=`/users/${user.userid}/transactions/${transaction._id}/pay`) 
                              button.pay-button(type="submit") Pay
                        else 
                          button.msg-text--individual-btn.pay.btn #{transaction.status}
                      else 
                        button.msg-text--individual-btn.paid.btn #{transaction.status}
                    hr.line
        -} 
      .container--group-request
        .container--group-request-message
          form.container--group-message-box
            input.message--field(type='text' placeholder='Enter The Amount to Split')
            button.btn-send
              ion-icon.icon-send(name='paper-plane-outline')
        button.btn-request
          span.message-box &#x20B9; Request

    form.grps-message.hidden(method="POST" action=`/users/${user.userid}/groups/group/${group._id}/createmsg`)
      .request-main
          .request-main-header Add an expense
            span.dismiss1 x
          .request-main-body
            .request-main-body-hero
                img.request-main-body-hero-icon(src='/images/payment.png' alt='request money icon')
                .request-main-body-hero-form
                  input.request-main-body-hero-form-description(type='text' placeholder='Enter a description' name="subject" required="true")
                  .request-main-body-hero-form-currency-wrap
                      span.currency-code INR
                      input.request-main-body-hero-form-cost(type='number' placeholder='0.00' min='0')
          .request-main-body-splitting-option
              | Paid by you and split 
              span.request-main-body-splitting-option-btn equally
              | .
          .request-main-footer
            button.cancel-button(type='button')
                | Cancel
            button.save-button(type='submit')
                | Save
      .request-splitting-options.hidden
          .request-splitting-options-header Choose split options
            span.dismiss x
          .request-splitting-options-buttons
            button.split-equally-btn(type="button")
                | =
            button.split-by-amount-btn(type="button")
                | 1.23
          .request-split-equally
            h3 Split equally

            each member in group.members
              .request-split-equally-members
                  .request-split-equally-members-left
                    img.user-profile-pic(src='/images/profile.png' alt='')
                    span.request-split-equally-name #{member.name}
                  .request-split-equally-members-right
                    span.request-split-equally-currency INR
                    input.request-split-equally-amount(type='number' placeholder="0.00" name="money[]")

          .request-split-by-amount
            h3 Split unequally

            each member in group.members
              .request-split-by-amount-members
                  .request-split-by-amount-members-left
                    img.user-profile-pic(src='/images/profile.png' alt='')
                    span.request-split-by-amount-name #{member.name}
                  .request-split-by-amount-amount
                    span INR
                    input.request-split-by-amount-input(type='number' name="" )

  
  script(src='/javascripts/request.js')
  script(type='module' src='https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js')
  script(nomodule='' src='https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js')
